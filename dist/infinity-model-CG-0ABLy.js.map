{"version":3,"file":"infinity-model-CG-0ABLy.js","sources":["../src/-private/notifier.js","../src/-private/evented.js","../src/-private/defaults.js","../src/utils.js","../src/lib/infinity-model.js"],"sourcesContent":["export default class Notifier {\n  constructor() {\n    this.listeners = [];\n  }\n\n  /**\n   * Add a callback as a listener, which will be triggered when sending\n   * notifications.\n   */\n  addListener(listener) {\n    this.listeners.push(listener);\n\n    return () => this.removeListener(listener);\n  }\n\n  /**\n   * Remove a listener so that it will no longer receive notifications.\n   */\n  removeListener(listener) {\n    const listeners = this.listeners;\n\n    for (let i = 0, len = listeners.length; i < len; i++) {\n      if (listeners[i] === listener) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Notify registered listeners.\n   */\n  trigger(...args) {\n    this.listeners.slice(0).forEach((listener) => listener(...args));\n  }\n}\n","import Notifier from './notifier';\n\n// in lieue of a decorator, lets just use Mixin/composition pattern\nexport function addEvented(Base) {\n  return class extends Base {\n    on(eventName, listener) {\n      return notifierForEvent(this, eventName).addListener(listener);\n    }\n\n    off(eventName, listener) {\n      return notifierForEvent(this, eventName).removeListener(listener);\n    }\n\n    trigger(eventName, ...args) {\n      const notifier = notifierForEvent(this, eventName);\n      if (notifier) {\n        notifier.trigger.apply(notifier, args);\n      }\n    }\n  };\n}\n\nfunction notifierForEvent(object, eventName) {\n  if (object._eventedNotifiers === undefined) {\n    object._eventedNotifiers = {};\n  }\n\n  let notifier = object._eventedNotifiers[eventName];\n\n  if (!notifier) {\n    notifier = object._eventedNotifiers[eventName] = new Notifier();\n  }\n\n  return notifier;\n}\n","import { tracked } from '@glimmer/tracking';\n\nexport function DEFAULTS(Base) {\n  return class extends Base {\n    /**\n      Increases or decreases depending on scroll direction\n\n      @private\n      @property currentPage\n      @type Integer\n      @default 0\n    */\n    @tracked currentPage = 0;\n\n    /**\n      @private\n      @property extraParams\n      @type Object\n      @default null\n    */\n    @tracked extraParams = null;\n\n    /**\n      Used as a marker for the page the route starts on\n\n      @private\n      @property firstPage\n      @type Integer\n      @default 0\n    */\n    @tracked firstPage = 0;\n\n    /**\n      @public\n      @property isError\n      @type Boolean\n      @default false\n    */\n    @tracked isError = false;\n\n    /**\n      @public\n      @property isLoaded\n      @type Boolean\n      @default false\n    */\n    @tracked isLoaded = false;\n\n    /**\n      @public\n      @property loadingMore\n      @type Boolean\n      @default false\n    */\n    @tracked loadingMore = false;\n\n    /**\n      Arbitrary meta copied over from\n      the HTTP response, to maintain the\n      default behavior of ember-data requests\n      @type objects\n      @default null\n    */\n    @tracked meta = null;\n\n    /**\n      @private\n      @property _perPage\n      @type Integer\n      @default 25\n    */\n    @tracked perPage = 25;\n\n    /**\n      @public\n      @property reachedInfinity\n      @default false\n     */\n    @tracked reachedInfinity = false;\n\n    /**\n      @public\n      @property store\n      @default null\n     */\n    @tracked store = null;\n\n    /**\n      Name of the \"per page\" param in the\n      resource request payload\n      @type {String}\n      @default  \"per_page\"\n     */\n    @tracked perPageParam = 'per_page';\n\n    /**\n      Name of the \"page\" param in the\n      resource request payload\n      @type {String}\n      @default \"page\"\n     */\n    @tracked pageParam = 'page';\n\n    /**\n      Path of the \"total pages\" param in\n      the HTTP response\n      @type {String}\n      @default \"meta.total_pages\"\n     */\n    @tracked totalPagesParam = 'meta.total_pages';\n\n    /**\n      Path of the \"count\" param in indicating\n      number of records from HTTP response\n      @type {String}\n      @default \"meta.count\"\n     */\n    @tracked countParam = 'meta.count';\n\n    /**\n      The supported findMethod name for\n      the developers Ember Data version.\n      Provided here for backwards compat.\n      @public\n      @property storeFindMethod\n      @default null\n     */\n    @tracked storeFindMethod = null;\n\n    /**\n      @private\n      @property _count\n      @type Integer\n      @default 0\n    */\n    @tracked _count = 0;\n\n    /**\n      @private\n      @property _totalPages\n      @type Integer\n      @default 0\n    */\n    @tracked _totalPages = 0;\n\n    /**\n      @private\n      @property _infinityModelName\n      @type String\n      @default null\n    */\n    @tracked _infinityModelName = null;\n\n    /**\n      @private\n      @property _firstPageLoaded\n      @type Boolean\n      @default false\n    */\n    @tracked _firstPageLoaded = false;\n\n    /**\n      @private\n      @property _increment\n      @type Integer\n      @default 1\n    */\n    @tracked _increment = 1;\n\n    /**\n      simply used for previous page scrolling abilities and passed from\n      infinity-loader component and set on infinityModel\n      @private\n      @property _scrollable\n      @type Integer\n      @default null\n    */\n    @tracked _scrollable = null;\n\n    /**\n      determines if can load next page or previous page (if applicable)\n\n      @private\n      @property _canLoadMore\n      @type Boolean\n    */\n    @tracked _canLoadMore = null;\n  };\n}\n","import { get } from '@ember/object';\nimport InfinityModel from './lib/infinity-model';\n\nexport let objectAssign =\n  Object.assign ||\n  function objectAssign(target) {\n    'use strict';\n    if (target == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    target = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index];\n      if (source != null) {\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n/**\n * determine param to set on infinityModel\n * if user passes null, then don't send query param in request\n * if user passes option, use it\n * else set to default param\n *\n * @method paramsCheck\n * @param {String} key - param name\n * @param {Object} options - parameter overrides\n * @param {Object} extendedInfinityModel - custom infinity model\n * @return {String} parameter value\n */\nexport function paramsCheck(key, options, extendedInfinityModel) {\n  const paramDefault = get(extendedInfinityModel, key);\n  const paramOverride = options[key];\n\n  if (paramOverride === null) {\n    // allow user to set to null if passed into infinityRoute explicitly\n    return null;\n  } else if (paramOverride) {\n    return paramOverride;\n  } else {\n    return paramDefault;\n  }\n}\n\n/**\n * @method checkInstanceOf\n * @param {Ember.Array}\n * @return {Boolean}\n */\nexport function checkInstanceOf(infinityModel) {\n  if (!(infinityModel instanceof InfinityModel)) {\n    throw new Error(\n      'Ember Infinity: You must pass an Infinity Model instance as the first argument'\n    );\n  }\n  return true;\n}\n\n/**\n * @method convertToArray\n * @param {Ember.Array}\n * @return {Array}\n */\nexport function convertToArray(queryObject) {\n  if (queryObject.slice) {\n    return queryObject.slice();\n  }\n  return queryObject;\n}\n","import ArrayProxy from '@ember/array/proxy';\nimport { addEvented } from '../-private/evented';\nimport { DEFAULTS } from '../-private/defaults';\nimport { objectAssign } from '../utils';\nimport { resolve } from 'rsvp';\n\n/**\n  @class InfinityModel\n  @namespace EmberInfinity\n  @module ember-infinity/lib/infinity-model\n  @extends Ember.ArrayProxy\n*/\nexport default class InfinityModel extends DEFAULTS(addEvented(ArrayProxy)) {\n  /**\n    determines if can load next page or previous page (if applicable)\n\n    @public\n    @property canLoadMore\n    @type Boolean\n    @default false\n    @overridable\n  */\n  get canLoadMore() {\n    if (typeof this._canLoadMore === 'boolean') {\n      return this._canLoadMore;\n    }\n\n    const { _count, _totalPages, currentPage, perPage, _increment } = this;\n    const shouldCheck = _increment === 1 && currentPage !== undefined;\n    if (shouldCheck) {\n      if (_totalPages) {\n        return currentPage < _totalPages ? true : false;\n      } else if (_count) {\n        return currentPage < _count / perPage ? true : false;\n      }\n    }\n    if (this.firstPage > 1) {\n      // load previous page if starting page was not 1.  Otherwise ignore this block\n      return this.firstPage > 1 ? true : false;\n    }\n    return false;\n  }\n\n  set canLoadMore(value) {\n    this._canLoadMore = value;\n  }\n\n  /**\n    build the params for the next page request\n    if param does not exist (user set to null or not defined) it will not be sent with request\n    @private\n    @method buildParams\n    @return {Object} The query params for the next page of results\n   */\n  buildParams(increment) {\n    const pageParams = {};\n    let { perPageParam, pageParam } = this;\n    if (typeof perPageParam === 'string') {\n      pageParams[perPageParam] = this.perPage;\n    }\n    if (typeof pageParam === 'string') {\n      pageParams[pageParam] = this.currentPage + increment;\n    }\n\n    return objectAssign(pageParams, this.extraParams);\n  }\n\n  /**\n    abstract after-model hook, can be overridden in subclasses\n    Used to keep shape for optimization\n\n    @method afterInfinityModel\n    @param {Ember.Array} newObjects the new objects added to the model\n    @param {Ember.ArrayProxy} infinityModel (self)\n    @return {Ember.RSVP.Promise} A Promise that resolves the new objects\n    @return {Ember.Array} the new objects\n   */\n  afterInfinityModel(newObjects /*, infinityModel*/) {\n    // override in your subclass to customize\n    return resolve(newObjects);\n  }\n\n  /**\n    lifecycle hooks\n\n    @method infinityModelLoaded\n   */\n  infinityModelLoaded() {}\n\n  /**\n    lifecycle hooks\n\n    @method infinityModelUpdated\n   */\n  infinityModelUpdated() {}\n}\n"],"names":["Notifier","constructor","listeners","addListener","listener","push","removeListener","i","len","length","splice","trigger","args","slice","forEach","addEvented","Base","on","eventName","notifierForEvent","off","notifier","apply","object","_eventedNotifiers","undefined","DEFAULTS","_class","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_initializerDefineProperty","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","objectAssign","Object","assign","target","TypeError","index","arguments","source","key","hasOwnProperty","call","paramsCheck","options","extendedInfinityModel","paramDefault","get","paramOverride","checkInstanceOf","infinityModel","InfinityModel","Error","convertToArray","queryObject","ArrayProxy","canLoadMore","_canLoadMore","_count","_totalPages","currentPage","perPage","_increment","shouldCheck","firstPage","value","buildParams","increment","pageParams","perPageParam","pageParam","extraParams","afterInfinityModel","newObjects","resolve","infinityModelLoaded","infinityModelUpdated"],"mappings":"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"}